#! /bin/bash

function lsmod() {
    ls -l | awk '{k=0;for(i=0;i<=8;i++)k+=((substr($1,i+2,1)~/[rwx]/) *2^(8-i));if(k)printf("%0o ",k);print}'
}

function fetch() {
    git fetch origin "$1":"$@"; git co "$1";
}

function mcd() {
    mkdir -p "$1" && cd "$1";
}
function deleteGitMerged() {
  git branch --merged | grep -v "\*" | xargs -n 1 git branch -d
}

function search() {
  if [ "$#" -gt "1" ]; then
    filetype="$1"
    search="$2"
  elif [ "$#" -eq "1" ]; then
    filetype="*"
    search="$1"
  else
    echo "Please provide function arguments.. use: search [filetype] regex "
    exit
  fi
  find . -iname "*.$filetype"|  grep -v "cache" | xargs grep "$search" 
}

function error_log() {
  domains=( 'ro' 'bg' 'hu' )
  servers=('nginx', 'apache2')

  if [ $# -eq 0 ]; then
    prefix="www"
  else
    prefix="$1"
  fi

  for srv in "${server[@]}"; do
    for d in "${domains[@]}"; do
        file="/var/log/${srv}/${prefix}.emag.${d}-error.log"
        if [ -s $file ]; then
            break
        fi
    done
  done
  if [ -r $file ]; then
    tail -f $file 
  fi
}

function access_log() {
  domains=( 'ro' 'bg' 'hu' )

  if [ $# -eq 0 ]; then
    prefix="www"
  else
    prefix="$1"
  fi

  for d in "${domains[@]}"; do
    file="/var/log/apache2/${prefix}.emag.${d}-access.log"
    if [ -s $file ]; then
      break
    fi
  done
  if [ -r $file ]; then
    tail -f $file | ccze
  fi
}

# Recursively traverse directory tree for git repositories, run git command
# e.g.
#   gittree status
#   gittree diff
gittree() {
  if [ $# -lt 1 ]; then
    echo "Usage: gittree <command>"
    return 1
  fi

  for gitdir in $(find . -type d -name .git); do
    # Display repository name in blue
    repo=$(dirname $gitdir)
    echo -e "\033[34m$repo\033[0m"

    # Run git command in the repositories directory
    cd $repo && git $@
    ret=$?

    # Return to calling directory (ignore output)
    cd - > /dev/null

    # Abort if cd or git command fails
    if [ $ret -ne 0 ]; then
      return 1
    fi

    echo
  done
}

function createSwap(){
    if [ $# -eq 0 ]; then
        file="/media/fasthdd/swapfile1.img"
        filesize="1M"
    else
        file="/media/fasthdd/$1"
        filesize=$2
    fi
    if [ ! -d /media/fasthdd ]; then
        sudo mkdir /media/fasthdd 
    fi
    sudo dd if=/dev/zero of=$file bs=1024 count=$filesize
    sudo mkswap $file
    fstabLine="$file swap swap sw 0 0" 
    sudo zsh -c "echo  $fstabLine >> /etc/fstab"
    sudo chmod 600 $file
    sudo swapon $file
    cat /proc/swaps
}

if [ -f $DOTFILES/local/functions ]; then
	. $DOTFILES/local/functions
fi

